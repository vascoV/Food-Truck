{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","FoodTruck","name","body","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;;;kBAEc,gBAAmB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,QAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,YAAIC,eAAe,IAAIC,mBAAJ,EAAnB;AACAD,qBAAaE,IAAb,GAAoBJ,IAAIK,IAAJ,CAASD,IAA7B;;AAEAF,qBAAaI,IAAb,CAAkB,eAAO;AACrB,gBAAGC,GAAH,EAAON,IAAIO,IAAJ,CAASD,GAAT;AACPN,gBAAIQ,IAAJ,CAAS,EAACC,SAAS,+BAAV,EAAT;AACH,SAHD;AAIH,KARD;;AAUA;AACAZ,QAAIa,GAAJ,CAAQ,GAAR,EAAa,UAACX,GAAD,EAAMC,GAAN,EAAc;AACvBE,4BAAUS,IAAV,CAAe,EAAf,EAAmB,UAACL,GAAD,EAAMM,UAAN,EAAqB;AACpC,gBAAGN,GAAH,EAAQN,IAAIO,IAAJ,CAASD,GAAT;AACRN,gBAAIQ,IAAJ,CAASI,UAAT;AACH,SAHD;AAIH,KALD;;AAOC;AACAf,QAAIa,GAAJ,CAAQ,MAAR,EAAgB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC1BE,4BAAUW,QAAV,CAAmBd,IAAIe,MAAJ,CAAWC,EAA9B,EAAkC,UAACT,GAAD,EAAMU,SAAN,EAAoB;AAClD,gBAAGV,GAAH,EAAQN,IAAIO,IAAJ,CAASD,GAAT;AACRN,gBAAIQ,IAAJ,CAASQ,SAAT;AACH,SAHD;AAIH,KALD;;AAOA;AACAnB,QAAIoB,GAAJ,CAAQ,MAAR,EAAgB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAC3BE,4BAAUW,QAAV,CAAmBd,IAAIe,MAAJ,CAAWC,EAA9B,EAAkC,UAACT,GAAD,EAAMU,SAAN,EAAoB;AAClD,gBAAGV,GAAH,EAAQN,IAAIO,IAAJ,CAASD,GAAT;AACRU,sBAAUb,IAAV,GAAiBJ,IAAIK,IAAJ,CAASD,IAA1B;AACAa,sBAAUX,IAAV,CAAe,eAAO;AAClB,oBAAGC,GAAH,EAAQN,IAAIO,IAAJ,CAASD,GAAT;AACRN,oBAAIQ,IAAJ,CAAS,EAACC,SAAS,uBAAV,EAAT;AACH,aAHD;AAIH,SAPD;AAQF,KATD;;AAWA;AACAZ,QAAIqB,MAAJ,CAAW,MAAX,EAAmB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAC/BE,4BAAUiB,MAAV,CAAiB;AACbC,iBAAKrB,IAAIe,MAAJ,CAAWC;AADH,SAAjB,EAEG,UAACT,GAAD,EAAMU,SAAN,EAAoB;AACnB,gBAAGV,GAAH,EAAQN,IAAIO,IAAJ,CAASD,GAAT;AACRN,gBAAIQ,IAAJ,CAAS,EAACC,SAAS,gCAAV,EAAT;AACH,SALD;AAMD,KAPD;;AASD,WAAOZ,GAAP;AACH,C","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router} from 'express';\nimport FoodTruck from '../model/FoodTruck';\n\nexport default({ config, db}) => {\n    let api = Router();\n\n    // CRUD - Create, Reade, Update, Delete\n    // '/v1/foodtruck/add'\n    api.post('/add', (req, res) => {\n        let newFoodTruck = new FoodTruck();\n        newFoodTruck.name = req.body.name;\n\n        newFoodTruck.save(err => {\n            if(err)res.send(err)\n            res.json({message: 'Food Truck saved successfully'});\n        });\n    });\n\n    // '/v1/foodtruck/' - Read\n    api.get('/', (req, res) => {\n        FoodTruck.find({}, (err, foodtrucks) => {\n            if(err) res.send(err);\n            res.json(foodtrucks);\n        });\n    });\n\n     // '/v1/foodtruck/:id' - Read 1\n     api.get('/:id', (req, res) => {\n         FoodTruck.findById(req.params.id, (err, foodtruck) => {\n             if(err) res.send(err);\n             res.json(foodtruck);\n         });\n     });\n\n     // '/v1/foodtruck/:id' - Update\n     api.put('/:id', (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if(err) res.send(err);\n            foodtruck.name = req.body.name;\n            foodtruck.save(err => {\n                if(err) res.send(err)\n                res.json({message: \"Food Truck is updated\"});\n            });\n        });\n     });\n\n     // '/v1/foodtruck/:id' - Delete\n     api.delete('/:id', (req, res) => {\n       FoodTruck.remove({\n           _id: req.params.id\n       }, (err, foodtruck) => {\n           if(err) res.send(err)\n           res.json({message: \"FoodTruck successfully removed\"});\n       });\n     });\n\n    return api;\n}"]}